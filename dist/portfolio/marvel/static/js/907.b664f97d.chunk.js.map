{"version":3,"file":"static/js/907.b664f97d.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelServices.js","hooks/http.hook.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n    const {getAllComic, process, setProcess} = useMarvelServices();\r\n    const [comicList, setComicList] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(false);\r\n\r\n    const setContent = (process, Component) => {\r\n        switch (process) {\r\n            case 'waiting':\r\n                return <Spinner/>;\r\n            case 'loading':\r\n                return dataLoading ? <Component/> : <Spinner/>;\r\n            case 'error':\r\n                return <ErrorMessage/>\r\n            case 'confirmed':\r\n                return <Component/>\r\n            default:\r\n                throw new Error('Unexpected process state');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        onDataUpdate(false);\r\n    }, []);\r\n\r\n    const onDataUpdate = (state) => {\r\n        setDataLoading(state);\r\n        getAllComic(Math.floor(Math.random() * 57000))\r\n            .then(onDataLoad)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onDataLoad = (data) => {\r\n        setComicList(comicList => ( [...comicList, ...data]))\r\n        setDataLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => (<View comics={comicList}/>))}\r\n            <button disabled={dataLoading} onClick={() => onDataUpdate(true)} className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({comics}) => {\r\n    return (\r\n        <ul className=\"comics__grid\">\r\n            {comics.map(comic => (\r\n                <li key={comic.id} className=\"comics__item\">\r\n                    <Link to={`/comics/${comic.id}`}>\r\n                        <img src={comic.thumbnail} alt={comic.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{comic.title}</div>\r\n                        <div className=\"comics__item-price\">{comic.price ? comic.price + ' $': 'NOT AVAILABLE'}</div>\r\n                    </Link>\r\n                </li>\r\n            ))}                \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of comics\"\r\n            />\r\n            <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelServices = () => {\r\n\r\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apikey = 'apikey=5b914e3fbef97f81d2a62f14f887c53d';\r\n\r\n    const getAllCharacters = async (offset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComic = async (offset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apikey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apikey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apikey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&limit=2&${_apikey}`);\r\n        if (res.data.total === 0 ) {\r\n            return null\r\n        }\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformDescription = (descr) => {\r\n        if(!descr) {\r\n            return \"We don't have any information about this character!\"\r\n        }\r\n        return descr;\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            title: char.name,\r\n            description: _transformDescription(char.description),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            stories: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description,\r\n            pages: comic.pageCount,\r\n            lang: null,\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price\r\n        }\r\n    }\r\n\r\n    const editPictureStyles = (pictureUrl) => {\r\n        if (!pictureUrl) {\r\n            return null;\r\n        }\r\n        const imgStyles = {objectFit: 'cover'};\r\n        if (pictureUrl.search(/image_not_available/) !== -1) {\r\n            imgStyles.objectFit = 'contain';\r\n        }\r\n        return imgStyles;\r\n    }\r\n\r\n    return {loading,\r\n            error,\r\n            getAllCharacters, \r\n            getCharacter, \r\n            getCharacterByName, \r\n            getAllComic, \r\n            getComic, \r\n            editPictureStyles, \r\n            clearError, \r\n            process,\r\n            setProcess\r\n        }\r\n}\r\n\r\nexport default useMarvelServices;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);  \r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method=\"GET\", body=null, headers = {'Content-Type': 'application/json'} ) => {\r\n        setLoading(true);\r\n        setProcess('loading');\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('loading');\r\n        }, []);\r\n    return {loading, request, error, clearError, process, setProcess};\r\n}"],"names":["_jsx","style","display","width","height","objectFit","margin","src","img","alt","_jsxs","className","children","avengers","avengersLogo","View","_ref","comics","map","comic","Link","to","concat","id","thumbnail","title","price","_useMarvelServices","useMarvelServices","getAllComic","process","setProcess","_useState","useState","_useState2","_slicedToArray","comicList","setComicList","_useState3","_useState4","dataLoading","setDataLoading","useEffect","onDataUpdate","state","Math","floor","random","then","onDataLoad","data","_toConsumableArray","Component","Spinner","ErrorMessage","Error","setContent","disabled","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","_useHttp","loading","setLoading","error","setError","_useState5","_useState6","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apikey","getAllCharacters","offset","res","results","_transformCharacter","_ref2","_callee2","_context2","_transformComic","_x2","getCharacter","_ref3","_callee3","_context3","_x3","getComic","_ref4","_callee4","_context4","_x4","getCharacterByName","_ref5","_callee5","_context5","total","_x5","char","description","descr","path","extension","homepage","urls","wiki","stories","items","pages","pageCount","lang","prices","editPictureStyles","pictureUrl","imgStyles","search"],"sourceRoot":""}